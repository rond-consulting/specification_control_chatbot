Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fc592906-5709-4094-90e5-f6d9ea15f8a0\" name=\"Changes\" comment=\"added gitignore\">\r\n      <change afterPath=\"$PROJECT_DIR$/ChatGPT/.dotenv\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/ChatGPT/connection_to_gpt_testing.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/requirements.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/EAN_matching.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/EAN_matching.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChatGPT/exercise_ean.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChatGPT/exercise_ean.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ChatGPT/try_gamma.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ChatGPT/try_gamma.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Youtube/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Youtube/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;baranmetin&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/rond-consulting/ean_check.git&quot;,\r\n    &quot;accountId&quot;: &quot;7e1a75eb-8c33-4f4c-9067-e5ffbe11d728&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2o1VmsBVfbpFYgp71QwPhhLPQYH\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_MARK_IGNORED_FILES_AS_EXCLUDED\": \"true\",\r\n    \"Notification.DisplayName-DoNotAsk-GitHub Copilot\": \"GitHub Copilot\",\r\n    \"Notification.DoNotAsk-GitHub Copilot\": \"true\",\r\n    \"Python tests.Python tests in test_ean_on_gpt.py.executor\": \"Run\",\r\n    \"Python.connection_to_gpt_testing.executor\": \"Run\",\r\n    \"Python.ean_on_gpt.executor\": \"Run\",\r\n    \"Python.exercise_ean.executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.try_gamma.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"testing__youtube__guy\",\r\n    \"last_opened_file_path\": \"C:/Users/baran.metin/Documents/Projects/forBaran\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"exercise_ean\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"EAN_matching\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/exercise_ean.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"EAN_matching\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.exercise_ean\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-d7ad00fb9fc3-c546a90a8094-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.23726.102\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fc592906-5709-4094-90e5-f6d9ea15f8a0\" name=\"Changes\" comment=\"\" />\r\n      <created>1730037231905</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1730037231905</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added gitignore\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730364991226</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730364991226</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added gitignore\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added gitignore\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7d8c4f1e1f56ed9b321029c2a8ff123bac8307d2)
+++ b/.idea/workspace.xml	(date 1730731810323)
@@ -5,15 +5,18 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="fc592906-5709-4094-90e5-f6d9ea15f8a0" name="Changes" comment="added gitignore">
-      <change afterPath="$PROJECT_DIR$/ChatGPT/.dotenv" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/ChatGPT/connection_to_gpt_testing.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/EAN_matching.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/EAN_matching.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" afterPath="$PROJECT_DIR$/.env" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ChatGPT/exercise_ean.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/exercise_ean.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ChatGPT/try_gamma.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/try_gamma.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Youtube/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/Youtube/main.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChatGPT/.env" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/.env" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChatGPT/ean_on_gpt.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/ean_on_gpt.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChatGPT/gamma_scrape.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/gamma_scrape.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChatGPT/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/main.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChatGPT/prompts.py" beforeDir="false" afterPath="$PROJECT_DIR$/ChatGPT/prompts.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/asking_chatgpt.py" beforeDir="false" afterPath="$PROJECT_DIR$/asking_chatgpt.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/specification_scrape.py" beforeDir="false" afterPath="$PROJECT_DIR$/specification_scrape.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/webapp_trial.py" beforeDir="false" afterPath="$PROJECT_DIR$/webapp_trial.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -62,11 +65,18 @@
     "Notification.DisplayName-DoNotAsk-GitHub Copilot": "GitHub Copilot",
     "Notification.DoNotAsk-GitHub Copilot": "true",
     "Python tests.Python tests in test_ean_on_gpt.py.executor": "Run",
+    "Python.asking_chatgpt.executor": "Run",
     "Python.connection_to_gpt_testing.executor": "Run",
     "Python.ean_on_gpt.executor": "Run",
     "Python.exercise_ean.executor": "Run",
+    "Python.gamma_scrape.executor": "Run",
     "Python.main.executor": "Run",
+    "Python.md_read.executor": "Run",
+    "Python.specification_scrape.executor": "Run",
+    "Python.streamlit_ean.executor": "Run",
+    "Python.streamlit_gamma.executor": "Run",
     "Python.try_gamma.executor": "Run",
+    "Python.webapp_trial.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "testing__youtube__guy",
@@ -75,6 +85,7 @@
 }]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\baran.metin\Documents\Projects\Intergamma\ean_check" />
       <recent name="$PROJECT_DIR$/data" />
     </key>
   </component>
Index: ChatGPT/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This is a sample Python script.\r\n\r\n# Press ⌃R to execute it or replace it with your code.\r\n# Press Double ⇧ to search everywhere for classes, files, tool windows, actions, and settings.\r\n\r\n\r\ndef print_hi(name):\r\n    # Use a breakpoint in the code line below to debug your script.\r\n    print(f'Hi, {name}')  # Press ⌘F8 to toggle the breakpoint.\r\n\r\n\r\n# Press the green button in the gutter to run the script.\r\nif __name__ == '__main__':\r\n    print_hi('PyCharm')\r\n\r\n# See PyCharm help at https://www.jetbrains.com/help/pycharm/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChatGPT/main.py b/ChatGPT/main.py
--- a/ChatGPT/main.py	(revision 7d8c4f1e1f56ed9b321029c2a8ff123bac8307d2)
+++ b/ChatGPT/main.py	(date 1730714667140)
@@ -1,16 +1,65 @@
-# This is a sample Python script.
+# THIS WORKS!
+# %%
+# packages importing
+import pandas as pd
+import requests
+from openai import OpenAI
+from bs4 import BeautifulSoup
+
+# %%
+df_gamma = pd.read_csv('../data/4053423225952_specifications.csv')
+spec_names = df_gamma.columns
+specs = df_gamma
+print("-------------------------")
+print(spec_names, "\nEAN is", df_gamma['EAN'][0])
+print("-------------------------")
+
+# %%
+
+#print(df_gamma)
+#{df_gamma[df_gamma['EAN'] == ean].to_markdown()}
+ean = df_gamma['EAN'][0]
+# Set up prompt for ChatGPT
+prompt = f"""
+
+
+What can you tell me about the EAN named as {ean}?
+You can check if its attributes are correct at attributes at:
+{df_gamma.to_markdown()}
+
+Specifically, can you make a list with bulletpoints of how many of the specifications I provide 
+are correct and how many are wrong?
 
-# Press ⌃R to execute it or replace it with your code.
-# Press Double ⇧ to search everywhere for classes, files, tool windows, actions, and settings.
+Could you also tell me what percentage of information I provided is correct? 
 
+For instance if I gave 20 specifications and 16 of them are correct can you say:
+- From the information you gave 80% is correct!
 
-def print_hi(name):
-    # Use a breakpoint in the code line below to debug your script.
-    print(f'Hi, {name}')  # Press ⌘F8 to toggle the breakpoint.
+"""
 
 
-# Press the green button in the gutter to run the script.
-if __name__ == '__main__':
-    print_hi('PyCharm')
+client = OpenAI(api_key="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")
 
-# See PyCharm help at https://www.jetbrains.com/help/pycharm/
+model = 'gpt-3.5-turbo'
+temperature = 0.7
+max_tokens = 1000
+
+messages = [
+    {'role': 'system', 'content': 'You are an expert on evaluating the specifications of products via their EANs.'},
+    {'role': 'user', 'content': prompt}
+]
+
+# helper function
+def get_summary():
+    #ean = ean,
+    completion = client.chat.completions.create(
+        model = model,
+        messages = messages,
+        temperature = temperature,
+        max_tokens = max_tokens
+    )
+    return completion.choices[0].message.content
+
+print(get_summary())
+
+#demo = gradio.Interface(fn = get_summary, input = ean)
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/data\r\n*.csv\r\n*.json\r\n\r\nvenv*\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 7d8c4f1e1f56ed9b321029c2a8ff123bac8307d2)
+++ b/.gitignore	(date 1730727823948)
@@ -1,5 +1,15 @@
+# ignore the data files
+
 /data
 *.csv
 *.json
 
+# Ignore the virtual environment
 venv*
+
+# Ignore the .env variables
+.env
+
+
+# Output
+*.md
